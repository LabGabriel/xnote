{"version":3,"sources":["common/hooks/useLocalStorage/index.ts","common/context/XnoteContext.tsx","components/Container/Footer/styled.ts","components/Container/Footer/FooterView.tsx","components/Container/Footer/Footer.tsx","components/Container/styled.ts","components/Container/index.tsx","pages/xnote/common/util/createNote/index.ts","pages/xnote/DialogCreate/styled.ts","pages/xnote/DialogCreate/DialogCreateView.tsx","pages/xnote/DialogCreate/DialogCreate.tsx","assets/background-modal.png","assets/icon/icon-github.svg","assets/logo-xnote.svg","pages/xnote/DialogAbout/styled.ts","pages/xnote/DialogAbout/DialogAboutView.tsx","pages/xnote/DialogAbout/DialogAbout.tsx","pages/xnote/DialogEdit/styled.ts","pages/xnote/DialogEdit/DialogEditView.tsx","pages/xnote/DialogEdit/DialogEdit.tsx","components/TextArea/styled.ts","components/TextArea/TextAreaView.tsx","components/TextArea/TextArea.tsx","pages/xnote/Tabs/styled.ts","pages/xnote/Tabs/TabsView.tsx","pages/xnote/Tabs/Tabs.tsx","pages/xnote/xnoteView.tsx","pages/xnote/xnote.tsx","router.tsx","index.tsx"],"names":["useLocalStorage","key","initialState","useState","storage","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","XnoteContext","createContext","XnoteProvider","children","noteContent","setNoteContent","isOpenDialogCreate","setIsOpenDialogCreate","isOpenDialogEdit","setIsOpenDialogEdit","isOpenDialogAbout","setIsOpenDialogAbout","id_note","title","noteEditDefaultValue","setNoteEditDefaultValue","Provider","value","Footer","styled","footer","NavFooter","ul","FooterView","onDeleteAllNote","amountNote","onDialogAbout","onClick","disabled","data-testid","useContext","setStorage","length","ReactDOM","unstable_batchedUpdates","toast","prevState","Main","main","Container","createNote","uuidv4","content","Dialog","div","DialogHeader","DialogContent","ButtonClose","button","DialogBody","DialogFooter","ButtonPrimary","ButtonSecundary","Input","input","DialogCreateView","open","register","errors","handleSubmit","onSubmit","onClose","isErrors","type","role","id","required","placeholder","form","DialogCreate","useForm","formState","reset","data","notes","props","backgroundModal","LogoFooter","DialogAboutView","className","src","Logo","alt","href","target","rel","IconGithub","DialogAbout","ButtonDelete","DialogEditView","deleteThisNote","defaultValue","DialogEdit","filterIdNote","note","filter","indexNote","findIndex","splice","TextAreaStyled","textarea","TextAreaView","dataId","onChange","rest","data-id","autoFocus","TextArea","TabListStyled","TabList","TabStyled","Tab","ButtonPlus","TabsView","openDialogCreate","openDialogEdit","handleContent","onSelect","lastSelectedTab","defaultIndex","map","onDoubleClick","Tabs","setLastSelectedTab","useCallback","e","dataset","callBackNote","setTimeout","index","memo","xnoteView","Xnote","Router","exact","path","component","to","render","StrictMode","theme","autoClose","document","getElementById"],"mappings":"2LAmBeA,EAjBS,SAAIC,EAAaC,GAA+D,IAAD,EACzEC,oBAAS,WAC/B,IAAMC,EAAUC,aAAaC,QAAQL,GACrC,OAAIG,EACOG,KAAKC,MAAMJ,GAEXG,KAAKC,MAAMN,MANyE,mBAC5FO,EAD4F,KACrFC,EADqF,KAcnG,OAJAC,qBAAU,WACNN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MAC1C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,OCXNI,EAAeC,wBAAc,IAE7BC,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnCjB,EAA+B,QAAS,MAAnDI,EAD8C,sBAEfD,mBAAwBC,GAFT,mBAE9Cc,EAF8C,KAEjCC,EAFiC,OAIDhB,oBAAkB,GAJjB,mBAI9CiB,EAJ8C,KAI1BC,EAJ0B,OAKLlB,oBAAkB,GALb,mBAK9CmB,EAL8C,KAK5BC,EAL4B,OAMHpB,oBAAkB,GANf,mBAM9CqB,EAN8C,KAM3BC,EAN2B,OAOGtB,mBAAuC,CAC3FuB,QAAS,GACTC,MAAO,KAT0C,mBAO9CC,EAP8C,KAOxBC,EAPwB,KAYrD,OACI,cAACf,EAAagB,SAAd,CAAuBC,MAEf,CACIb,cACAC,iBAEAC,qBACAC,wBAEAC,mBACAC,sBAEAC,oBACAC,uBAEAG,uBACAC,2BAhBZ,SAoBKZ,K,uCCtCAe,EAASC,IAAOC,OAAV,qdAuBNC,EAAYF,IAAOG,GAAV,0dCMPC,EA3BuB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAClE,OACI,eAAC,EAAD,WACI,8BACI,cAACL,EAAD,UACI,6BACI,wBACIM,QAASH,EACTI,WAAUH,EAAa,GACvBI,cAAY,aAHhB,8BAUZ,8BACI,cAACR,EAAD,UACI,6BACI,wBAAQM,QAASD,EAAjB,6BCETR,EAlBU,WAAO,IAAD,EACmCY,qBAAW9B,GAAjEI,EADmB,EACnBA,YAAaC,EADM,EACNA,eAAgBM,EADV,EACUA,qBADV,EAEJzB,EAAgB,QAAS,MAAvC6C,EAFkB,oBAGrBN,EAAarB,EAAY4B,OAY/B,OAAO,cAAC,EAAD,CAAkBR,gBAVD,WACpBS,IAASC,yBAAwB,WAC7B7B,EAAe,IACf0B,EAAW,OAEfI,YAAM,qBAKgCV,aAAYC,cAFhC,kBAAMf,GAAqB,SAAAyB,GAAS,OAAKA,SClBtDC,EAAOlB,IAAOmB,KAAV,2FCaFC,EAXa,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAC3B,OACI,qCACI,cAACkC,EAAD,UACKlC,IAEL,cAAC,EAAD,Q,wBCAGqC,GARI,SAAC3B,GAChB,MAAO,CACHD,QAAS6B,eACT5B,QACA6B,QAAS,K,QCJJC,GAASxB,IAAOyB,IAAV,4SAeNC,GAAe1B,IAAOyB,IAAV,iIASZE,GAAgB3B,IAAOyB,IAAV,qRAabG,GAAc5B,IAAO6B,OAAV,mTAeXC,GAAa9B,IAAOyB,IAAV,kIAQVM,GAAe/B,IAAOyB,IAAV,qFAKZO,GAAgBhC,IAAO6B,OAAV,gLASbI,GAAkBjC,YAAOgC,GAAPhC,CAAH,yHAMfkC,GAAQlC,IAAOmC,MAAV,uNCxCHC,GAtCmC,SAAC,GAAiE,IAAD,EAA9DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC3FC,EAAkC,cAAvB,UAAAJ,EAAO7C,aAAP,eAAckD,MAC/B,OACI,mCACKP,GACG,cAACb,GAAD,CAAQqB,KAAK,SAAb,SACI,eAAClB,GAAD,WACI,eAACD,GAAD,WACI,iDACA,cAACE,GAAD,CAAapB,QAASkC,EAAtB,SACI,uCAGR,cAACZ,GAAD,UACI,uBAAMW,SAAUD,EAAaC,GAAWK,GAAG,aAA3C,UACI,cAACZ,GAAD,6BAEOI,EAAS,QACR,CAAES,UAAU,KAHpB,IAKIC,YAAY,WACZtC,cAAY,kBAEfiC,GAAY,6DAIrB,eAACZ,GAAD,WACI,cAACE,GAAD,CAAiBzB,QAASkC,EAA1B,mBACA,cAACV,GAAD,CAAeiB,KAAK,aAAavC,cAAY,qBAA7C,6BCObwC,GA9BgB,WAAO,IAAD,EACqCvC,qBAAW9B,GAAzEM,EADyB,EACzBA,mBAAoBC,EADK,EACLA,sBAAuBF,EADlB,EACkBA,eADlB,EAEgCiE,cAAzDb,EAFyB,EAEzBA,SAAuBC,EAFE,EAEfa,UAAab,OAAUC,EAFR,EAEQA,aAAca,EAFtB,EAEsBA,MACjDlF,EAAUG,KAAKC,MAAMH,aAAaC,QAAQ,UAHf,EAIVN,EAAgC,QAAS,MAAvD6C,EAJwB,oBAM3B8B,EAAU,WACZtD,GAAsB,SAAA6B,GAAS,OAAKA,KACpCoC,KAcJ,OACI,cAAC,GAAD,CACUf,WAAUC,SAAQC,eAAcC,SAb7B,SAACa,GAAwB,IAC9B5D,EAAU4D,EAAV5D,MACF6D,EAAK,sBAAOpF,GAAP,CAAgBkD,GAAW3B,KACtCoB,IAASC,yBAAwB,WAC7BH,EAAW2C,GACXrE,EAAeqE,MAEnBb,IACA1B,YAAM,eAK8C0B,UAChDL,KAAMlD,KCnCH,I,MAAA,IAA0B,8CCA1B,OAA0B,wCCA1B,OAA0B,uCCG5BqC,GAASxB,IAAOyB,IAAV,oMAYNE,GAAgB3B,IAAOyB,IAAV,orBAUE,SAAA+B,GAAK,OAAIA,EAAMC,mBAyB9B/B,GAAe1B,IAAOyB,IAAV,yLAYZG,GAAc5B,IAAO6B,OAAV,mTAeXE,GAAe/B,IAAOyB,IAAV,sPAeZiC,GAAa1D,IAAOyB,IAAV,+JC/CRkC,GAtCiC,SAAC,GAAuB,IAArBjB,EAAoB,EAApBA,QAASL,EAAW,EAAXA,KACxD,OACI,mCACKA,GACG,cAAC,GAAD,UACI,eAAC,GAAD,CAAeoB,gBAAiBA,GAAhC,UACI,eAAC,GAAD,WACI,qBAAKG,UAAU,OAAf,SACI,qBAAKC,IAAKC,GAAMC,IAAI,iBAExB,8BACI,cAAC,GAAD,CAAavD,QAASkC,EAAtB,SACI,yCAIZ,iEAGA,+BACI,0EACA,yFAEJ,cAAC,GAAD,UACI,oBAAGsB,KAAK,+CAA+CC,OAAO,SAASC,IAAI,aAA3E,UACI,cAACR,GAAD,UACI,qBAAKG,IAAKM,GAAYJ,IAAI,kBAE9B,yDCzBjBK,GANe,WAAO,IAAD,EACoBzD,qBAAW9B,GAAvDU,EADwB,EACxBA,kBAAmBC,EADK,EACLA,qBAE3B,OAAO,cAAC,GAAD,CAAwBkD,QADf,kBAAMlD,GAAqB,SAAAyB,GAAS,OAAKA,MACfoB,KAAM9C,KCLvCiC,GAASxB,IAAOyB,IAAV,4SAeNC,GAAe1B,IAAOyB,IAAV,iIASZE,GAAgB3B,IAAOyB,IAAV,qRAabG,GAAc5B,IAAO6B,OAAV,mTAeXC,GAAa9B,IAAOyB,IAAV,kIAQVM,GAAe/B,IAAOyB,IAAV,qFAKZO,GAAgBhC,IAAO6B,OAAV,gLASbwC,GAAerE,YAAOgC,GAAPhC,CAAH,iGAMZkC,GAAQlC,IAAOmC,MAAV,uNC7BHmC,GAvC+B,SAACd,GAAW,IAAD,EAC7CnB,EAAmFmB,EAAnFnB,KAAMC,EAA6EkB,EAA7ElB,SAAUC,EAAmEiB,EAAnEjB,OAAQC,EAA2DgB,EAA3DhB,aAAcC,EAA6Ce,EAA7Cf,SAAUC,EAAmCc,EAAnCd,QAAShD,EAA0B8D,EAA1B9D,MAAO6E,EAAmBf,EAAnBe,eAClE5B,EAAkC,cAAvB,UAAAJ,EAAO7C,aAAP,eAAckD,MAC/B,OACI,mCACKP,GACG,cAAC,GAAD,CAAQQ,KAAK,SAAb,SACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,4CACA,cAAC,GAAD,CAAarC,QAASkC,EAAtB,SACI,uCAGR,cAAC,GAAD,UACI,uBAAMD,SAAUD,EAAaC,GAAWK,GAAG,WAA3C,UACI,cAAC,GAAD,6BAEOR,EAAS,QACR,CAAES,UAAU,KAHpB,IAKIyB,aAAc9E,EACdsD,YAAY,WACZtC,cAAY,uBAEfiC,GAAY,6DAGrB,eAAC,GAAD,WACI,cAAC0B,GAAD,CAAc7D,QAAS+D,EAAvB,oBACA,cAAC,GAAD,CAAetB,KAAK,WAAWvC,cAAY,mBAA3C,6BCeb+D,GAlDc,WAAO,IAAD,EACyD9D,qBAAW9B,GAA3FQ,EADuB,EACvBA,iBAAkBC,EADK,EACLA,oBAAqBK,EADhB,EACgBA,qBAAsBT,EADtC,EACsCA,eAC7DO,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAFc,EAGkCyD,cAAzDb,EAHuB,EAGvBA,SAAuBC,EAHA,EAGba,UAAab,OAAUC,EAHV,EAGUA,aAAca,EAHxB,EAGwBA,MAHxB,EAIRtF,EAA+B,QAAS,MAAtD6C,EAJsB,oBAMzB8B,EAAU,WACZpD,GAAoB,SAAA2B,GAAS,OAAKA,KAClCoC,KAkCJ,OACI,cAAC,GAAD,CACUf,WAAUC,SAAQC,eAAcC,SAjC7B,SAACa,GACd,IAAMnF,EAAyBG,KAAKC,MAAMH,aAAaC,QAAQ,UACvDqB,EAAU4D,EAAV5D,MACFgF,EAAe,SAACC,GAAD,OAAuBA,EAAKlF,UAAYA,GAHxB,EAItBtB,EAAQyG,OAAOF,GAAvBC,EAJ8B,oBAK/BE,EAAY1G,EAAQ2G,UAAUJ,GACpCC,EAAKjF,MAAQA,EACbvB,EAAQ4G,OAAOF,EAAW,EAAGF,GAE7B7D,IAASC,yBAAwB,WAC7BH,EAAWzC,GACXe,EAAef,MAEnBuE,IACA1B,YAAM,gBAmB8C0B,UAAShD,QAAO6E,eAhBjD,WACnB,IAAMpG,EAAyBG,KAAKC,MAAMH,aAAaC,QAAQ,UAEzDwG,EAAY1G,EAAQ2G,WADL,SAACH,GAAD,OAAuBA,EAAKlF,UAAYA,KAE7DtB,EAAQ4G,OAAOF,EAAW,GAE1B/D,IAASC,yBAAwB,WAC7BH,EAAWzC,GACXe,EAAef,MAEnBuE,IACA1B,YAAM,gBAMFqB,KAAMhD,K,SCpDL2F,GAAiBhF,IAAOiF,SAAV,qXCgBZC,GAd2B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,OAAQX,EAAsC,EAAtCA,aAAcY,EAAwB,EAAxBA,SAAaC,EAAW,qDACvF,OACI,cAACL,GAAD,cACIpB,UAAU,gBACV0B,UAASH,EACTI,WAAW,EACXf,aAAcA,EACdY,SAAUA,EACVpC,YAAY,eACRqC,KCLDG,GAJuB,SAAC,GAAiD,IAA/CL,EAA8C,EAA9CA,OAAQX,EAAsC,EAAtCA,aAAcY,EAAwB,EAAxBA,SAAaC,EAAW,qDACnF,OAAO,cAAC,GAAD,8BAAoBF,SAAQX,eAAcY,YAAaC,M,SCFrDI,GAAgBzF,YAAO0F,KAAP1F,CAAH,sKASb2F,GAAY3F,YAAO4F,KAAP5F,CAAH,kdAkBT6F,GAAa7F,IAAO6B,OAAV,gaC8BRiE,GArDmB,SAACtC,GAAW,IAEtCrF,EAMAqF,EANArF,QACA4H,EAKAvC,EALAuC,iBACAC,EAIAxC,EAJAwC,eACAC,EAGAzC,EAHAyC,cACAC,EAEA1C,EAFA0C,SACAC,EACA3C,EADA2C,gBAEJ,OACI,eAAC,KAAD,CAAMD,SAAUA,EAAUE,aAAcD,EAAxC,UACI,cAACV,GAAD,UACI,sBAAK7B,UAAU,yBAAf,UACI,cAACiC,GAAD,CAAYrF,QAASuF,EAAkBrF,cAAY,4BAAnD,eAEMvC,EAAQ0C,OAEF1C,EAAQkI,KAAI,SAAC1B,GACT,OACI,cAACgB,GAAD,CAEIL,UAASX,EAAKlF,QACdC,MAAM,8BACN4G,cAAe,kBAAMN,EAAerB,EAAKlF,QAASkF,EAAKjF,QAJ3D,SAMKiF,EAAKjF,OALDiF,EAAKlF,YAStB,oBAKhBtB,GAEIA,EAAQkI,KAAI,SAAC1B,GACT,OACI,cAAC,KAAD,UACI,cAAC,GAAD,CACIQ,OAAM,UAAKR,EAAKlF,SAChB+E,aAAcG,EAAKpD,QACnB6D,SAAUa,KAJHtB,EAAKlF,gBCtC1C8G,GAAiB,WAAO,IAAD,EACoF5F,qBAAW9B,GAAhHO,EADiB,EACjBA,sBAAuBE,EADN,EACMA,oBAAqBM,EAD3B,EAC2BA,wBAAyBX,EADpD,EACoDA,YAAaC,EADjE,EACiEA,eADjE,EAEqBnB,EAAwB,YAAa,GAF1D,mBAElBoI,EAFkB,KAEDK,EAFC,OAGFzI,EAA+B,QAAS,MAAtD6C,EAHgB,oBASnBoF,EAAiBS,uBAAY,SAAChH,EAAiBC,GACjDE,EAAwB,CAAEH,UAASC,UACnCJ,GAAoB,SAAA2B,GAAS,OAAKA,OACnC,CAAC3B,EAAqBM,IAsBzB,OAAO,cAAC,GAAD,CAAUzB,QAASc,EAAmB8G,iBA7BpB,WACrB3G,GAAsB,SAAA6B,GAAS,OAAKA,MA4BuB+E,iBAAgBC,cApBzD,SAACS,GACnB,IAAMvI,EAAUG,KAAKC,MAAMH,aAAaC,QAAQ,UACxCyB,EAAU4G,EAAEzC,OAAZnE,MACAgD,EAAO4D,EAAEzC,OAAO0C,QAAhB7D,GAEF8D,EAAe,SAACjC,GAAD,OAAuBA,EAAKlF,UAAYqD,GALF,EAM5C3E,EAAQyG,OAAOgC,GAAvBjC,EANoD,oBAOrDE,EAAY1G,EAAQ2G,UAAU8B,GAEpCjC,EAAKpD,QAAUzB,EACf3B,EAAQ4G,OAAOF,EAAW,EAAGF,GAE7B7D,IAASC,yBAAwB,WAC7BH,EAAWzC,GACX0I,YAAW,kBAAM3H,EAAef,KAAU,SAM4C+H,SAF7E,SAACY,GAAD,OAAmBN,EAAmBM,IAEiDX,qBAG7FY,kBAAKR,ICzBLS,GAXa,WACxB,OACI,eAAC,EAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCPGC,GAJS,WACpB,OAAO,cAAC,GAAD,K,iBCgBIC,GAhBS,WACpB,OACI,cAAC,KAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,KAGjC,cAAC,KAAD,CAAOG,KAAK,SAASC,UAAWJ,KAChC,cAAC,KAAD,CAAOG,KAAK,IAAZ,SACI,cAAC,KAAD,CAAUE,GAAG,mB,MCNjCxG,IAASyG,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAgBC,MAAM,OAAOC,UAAW,OACxC,cAAC,EAAD,UACE,cAAC,GAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.16e70788.chunk.js","sourcesContent":["import React, { SetStateAction, useEffect, useState } from \"react\"\n\nconst useLocalStorage = <T>(key: string, initialState: any): [T, React.Dispatch<SetStateAction<T>>] => {\n    const [state, setState] = useState(() => {\n        const storage = localStorage.getItem(key);\n        if (storage) {\n            return JSON.parse(storage);\n        } else {\n            return JSON.parse(initialState!);\n        }\n    })\n    \n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, setState];\n}\n\nexport default useLocalStorage;","import useLocalStorage from \"common/hooks/useLocalStorage\";\nimport { INoteFields } from \"pages/xnote/common/types/dialog/index\";\nimport React, { createContext, useState } from \"react\";\nimport { IXnoteContext } from \"./types/types.component\";\n\nexport const XnoteContext = createContext({} as IXnoteContext);\n\nexport const XnoteProvider: React.FC = ({ children }) => {\n    const [storage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\n    const [noteContent, setNoteContent] = useState<INoteFields[]>(storage);\n    \n    const [isOpenDialogCreate, setIsOpenDialogCreate] = useState<boolean>(false);\n    const [isOpenDialogEdit, setIsOpenDialogEdit] = useState<boolean>(false);\n    const [isOpenDialogAbout, setIsOpenDialogAbout] = useState<boolean>(false);\n    const [noteEditDefaultValue, setNoteEditDefaultValue] = useState<Omit<INoteFields, \"content\">>({\n        id_note: \"\",\n        title: \"\"\n    });\n\n    return (\n        <XnoteContext.Provider value=\n            {\n                {\n                    noteContent,\n                    setNoteContent,\n\n                    isOpenDialogCreate, \n                    setIsOpenDialogCreate,\n\n                    isOpenDialogEdit, \n                    setIsOpenDialogEdit,\n\n                    isOpenDialogAbout, \n                    setIsOpenDialogAbout,\n\n                    noteEditDefaultValue, \n                    setNoteEditDefaultValue\n                }\n            }\n        >\n            {children}\n        </XnoteContext.Provider>\n    )\n};","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n    width: -webkit-fill-available;\n    padding: 0.5rem 1rem 0;\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    align-content: center;\n    display: flex;\n    justify-content: space-between;\n    \n    border: 0.1rem solid #121212;\n    border-left: 0;\n    border-bottom: 0;\n    border-right: 0;\n    text-align: right;\n    background: #000000;\n    width: -moz-available;\n    \n    div {\n        margin-bottom: 1rem;\n    }\n`;\n\nexport const NavFooter = styled.ul`\n    list-style: none;\n    font-size: 0.8rem;\n    display: flex;\n\n    li{\n        cursor: pointer;\n        &:first-child {\n            margin-right: 1rem;\n        }\n\n        button {\n            background-color: black;\n            cursor: pointer;\n            border: 0;\n            color: #cfcfcf;\n\n            &:disabled {\n                color: #282525;\n                cursor: not-allowed;\n            }\n        }\n    }\n`;","import React from \"react\";\nimport { Footer, NavFooter } from \"./styled\";\nimport { IFooter } from \"./types/types.component\";\n\nconst FooterView: React.FC<IFooter> = ({ onDeleteAllNote, amountNote, onDialogAbout }) => {\n    return (\n        <Footer>\n            <div>\n                <NavFooter>\n                    <li>\n                        <button \n                            onClick={onDeleteAllNote} \n                            disabled={amountNote > 1 ? false : true}\n                            data-testid=\"delete-all\"\n                        >\n                            Detele all\n                        </button>\n                    </li>\n                </NavFooter>\n            </div>\n            <div>\n                <NavFooter>\n                    <li>\n                        <button onClick={onDialogAbout}>About</button>\n                    </li>\n                </NavFooter>\n            </div>\n        </Footer>\n    )\n};\n\nexport default FooterView;","import { XnoteContext } from \"common/context/XnoteContext\";\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { toast } from \"react-toastify\";\nimport FooterView from \"./FooterView\";\n\nconst Footer: React.FC = () => {\n    const { noteContent, setNoteContent, setIsOpenDialogAbout } = useContext(XnoteContext);\n    const [, setStorage] = useLocalStorage(\"xnote\", \"[]\");\n    const amountNote = noteContent.length;\n    \n    const onDeleteAllNote = () => {\n        ReactDOM.unstable_batchedUpdates(() => {\n            setNoteContent([]);\n            setStorage([]);\n        });\n        toast(\"Delete all notes\");\n    };\n\n    const onDialogAbout = () => setIsOpenDialogAbout(prevState => !prevState);\n\n    return <FooterView {...{ onDeleteAllNote, amountNote, onDialogAbout }} />\n}\n\nexport default Footer;","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    max-width: 100%;\n    margin: auto;\n    padding: 1.5rem;\n`","import Footer from \"./Footer\";\nimport React from \"react\";\nimport { Main } from \"./styled\";\n\nconst Container: React.FC = ({ children }) => {\n    return (\n        <>\n            <Main>\n                {children}\n            </Main>\n            <Footer />\n        </>\n    )\n}\n\nexport default Container;","import { v4 as uuidv4 } from \"uuid\";\n\nconst createNote = (title: string) => {\n    return {\n        id_note: uuidv4(),\n        title,\n        content: \"\"\n    };\n};\n\nexport default createNote;","import styled from \"styled-components\";\n\nexport const Dialog = styled.div`\n    display: flex;\n    position: fixed; \n    top: 0;\n    right: 0;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    z-index: 1;\n    width: 100%;\n    height: 100%;    \n    background-color: rgba(0,0,0,0.4); \n    overflow: auto;   \n`\n\nexport const DialogHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    h3 {\n        color: #FFFFFF;\n    }\n`\n\nexport const DialogContent = styled.div`    \n    background-color: #262626;    \n    border-radius: 0.5em;\n    width: 20rem;\n    min-height: 5rem;\n    padding: 2em;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 2rem;\n`\n\nexport const ButtonClose = styled.button`\n    font-size: 1rem;\n    border: 0.1rem solid transparent;    \n    background-color: black;     \n    padding: 0.1rem 0.4rem;\n    border-radius: 0.2rem;\n    cursor: pointer;\n    animation: all 0.3s;\n    color: #FFFFFF;\n\n    p {\n        transform: rotate(45deg);\n    }\n`\n\nexport const DialogBody = styled.div`\n    form > span {\n        font-size: 0.8rem;\n        color: red;\n        font-weight: 100;\n    }\n`\n\nexport const DialogFooter = styled.div`\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const ButtonPrimary = styled.button`\n    background-color: #000000;\n    color: #FFFFFF;\n    padding: 0.5rem 0.8rem;\n    border-radius: 0.4rem;\n    border: 0;\n    cursor: pointer;\n`\n\nexport const ButtonSecundary = styled(ButtonPrimary)`\n    background-color: transparent;\n    border: 0.02rem solid #959595;\n    color: #FFFFFF;\n`\n\nexport const Input = styled.input`\n    padding: 0.5rem;\n    height: 1.3rem;\n    border-radius: 0.5rem !important;\n    background-color: #000000;\n    border: 0;\n    color: #FFFFFF;\n    width: -webkit-fill-available;\n`","import React from \"react\";\nimport { IDialogCreate } from \"../common/types/dialog\";\nimport { ButtonClose, ButtonPrimary, ButtonSecundary, Dialog, DialogBody, DialogContent, DialogFooter, DialogHeader, Input } from \"./styled\";\n\nconst DialogCreateView: React.FC<IDialogCreate> = ({ open, register, errors, handleSubmit, onSubmit, onClose }) => {\n    const isErrors = errors.title?.type === \"required\";\n    return (\n        <>\n            {open && (\n                <Dialog role=\"dialog\">\n                    <DialogContent>\n                        <DialogHeader>\n                            <h3>Create new note</h3>\n                            <ButtonClose onClick={onClose}>\n                                <p>+</p>\n                            </ButtonClose>\n                        </DialogHeader>\n                        <DialogBody>\n                            <form onSubmit={handleSubmit(onSubmit)} id=\"createNote\">\n                                <Input\n                                    {\n                                    ...register(\"title\",\n                                        { required: true })\n                                    }\n                                    placeholder=\"Tab name\"\n                                    data-testid=\"create-title\"\n                                />\n                                {isErrors && <span>Tab name is required</span>}\n                            </form>\n                        </DialogBody>\n\n                        <DialogFooter>\n                            <ButtonSecundary onClick={onClose}>Close</ButtonSecundary>\n                            <ButtonPrimary form=\"createNote\" data-testid=\"dialog-create-save\">Save</ButtonPrimary>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n};\n\nexport default DialogCreateView;","import { XnoteContext } from \"common/context/XnoteContext\";\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from 'react-toastify';\nimport { IDialogTitle, INoteFields } from \"../common/types/dialog\";\nimport createNote from \"../common/util/createNote\";\nimport DialogCreateView from \"./DialogCreateView\";\n\nconst DialogCreate: React.FC = () => {\n    const { isOpenDialogCreate, setIsOpenDialogCreate, setNoteContent } = useContext(XnoteContext);\n    const { register, formState: { errors }, handleSubmit, reset } = useForm<INoteFields>();\n    const storage = JSON.parse(localStorage.getItem(\"xnote\")!);\n    const [, setStorage] = useLocalStorage<string | any[]>(\"xnote\", \"[]\");\n\n    const onClose = () => {\n        setIsOpenDialogCreate(prevState => !prevState);\n        reset();\n    };\n\n    const onSubmit = (data: IDialogTitle) => {\n        const { title } = data;                \n        const notes = [...storage, createNote(title)];\n        ReactDOM.unstable_batchedUpdates(() => {\n            setStorage(notes);\n            setNoteContent(notes);\n        })\n        onClose();\n        toast(\"Create tab\");\n    };\n    \n    return (\n        <DialogCreateView\n            {...{ register, errors, handleSubmit, onSubmit, onClose }}\n            open={isOpenDialogCreate}\n        />\n    )\n}\n\nexport default DialogCreate;","export default __webpack_public_path__ + \"static/media/background-modal.026006b8.png\";","export default __webpack_public_path__ + \"static/media/icon-github.3b02157d.svg\";","export default __webpack_public_path__ + \"static/media/logo-xnote.dd297b0e.svg\";","import styled from \"styled-components\";\nimport { IDialogContentStyled } from \"./types/types.styled\";\n\nexport const Dialog = styled.div`\n  display: flex;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;  \n  background-color: rgba(0,0,0,0.4);\n`\n\nexport const DialogContent = styled.div<IDialogContentStyled>`\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    padding: 2rem 3rem;\n    max-width: 31.25rem;\n    margin: auto;\n    background-color: #262626;\n    border-radius: 1.25rem;\n    background-image: url(${props => props.backgroundModal});\n    background-repeat: no-repeat;\n\n    h1 {\n        color: white;\n        font-size: 2.5rem;\n        margin-top: 3rem;\n        margin-bottom: 3rem;\n    }\n\n    ul {\n        list-style: decimal;\n        padding-left: 1rem;        \n\n        li {\n            margin-bottom: 1rem;\n            color: white;\n        }\n    }\n\n    @media (max-width: 767px) {\n        width: 15.625rem;\n    }\n`\n\nexport const DialogHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .logo {\n        img {\n            width: 4rem;\n        }\n    }\n`\n\nexport const ButtonClose = styled.button`\n    font-size: 1.5rem;\n    border: 0.1rem solid transparent;    \n    background-color: black;     \n    padding: 0.2rem 0.8rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    animation: all 0.3s;\n    color: white;\n\n    p {\n        transform: rotate(45deg);\n    }\n`\n\nexport const DialogFooter = styled.div`\n    margin-top: 5rem;\n\n    a {\n        display: flex;\n        align-items: center;\n\n        p {\n            margin-left: 0.5rem;\n            color: white;\n            text-decoration: none;\n        }\n    }\n`\n\nexport const LogoFooter = styled.div`\n    img {\n        width: 1.5rem;\n        background-color: white;\n        padding: 0.5rem;\n        border-radius: 50%;\n    }\n`","import backgroundModal from \"assets/background-modal.png\";\nimport IconGithub from 'assets/icon/icon-github.svg';\nimport Logo from 'assets/logo-xnote.svg';\nimport React from \"react\";\nimport { ButtonClose, LogoFooter, Dialog, DialogContent, DialogFooter, DialogHeader } from \"./styled\";\nimport { IDialogAbout } from \"./types/types.component\";\n\nconst DialogAboutView: React.FC<IDialogAbout> = ({ onClose, open }) => {\n    return (\n        <>\n            {open && (\n                <Dialog>\n                    <DialogContent backgroundModal={backgroundModal}>\n                        <DialogHeader>\n                            <div className=\"logo\">\n                                <img src={Logo} alt=\"Logo Xnote\" />\n                            </div>\n                            <div>\n                                <ButtonClose onClick={onClose}>\n                                    <p>+</p>\n                                </ButtonClose>\n                            </div>\n                        </DialogHeader>\n                        <h1>\n                            Create new notes is very simple\n                        </h1>\n                        <ul>\n                            <li>Click in button plus, to create new note</li>\n                            <li>To edit name tab or delete note, double click in tab</li>\n                        </ul>\n                        <DialogFooter>\n                            <a href=\"https://github.com/Gabriel-Silverio-96/xnote\" target=\"_blank\" rel=\"noreferrer\">\n                                <LogoFooter>\n                                    <img src={IconGithub} alt=\"Icon Github\" />\n                                </LogoFooter>\n                                <p>Respository</p>\n                            </a>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\nexport default DialogAboutView;","import { XnoteContext } from \"common/context/XnoteContext\";\nimport React, { useContext } from \"react\";\nimport DialogAboutView from \"./DialogAboutView\";\n\nconst DialogAbout: React.FC = () => {\n    const { isOpenDialogAbout, setIsOpenDialogAbout } = useContext(XnoteContext)\n    const onClose = () => setIsOpenDialogAbout(prevState => !prevState);\n    return <DialogAboutView {... { onClose }} open={isOpenDialogAbout} />\n}\n\nexport default DialogAbout;","import styled from \"styled-components\";\n\nexport const Dialog = styled.div`\n    display: flex;\n    position: fixed; \n    top: 0;\n    right: 0;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    z-index: 1;\n    width: 100%;\n    height: 100%;    \n    background-color: rgba(0,0,0,0.4); \n    overflow: auto;   \n`\n\nexport const DialogHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    h3 {\n        color: #FFFFFF;\n    }\n`\n\nexport const DialogContent = styled.div`    \n    background-color: #262626;    \n    border-radius: 0.5em;\n    width: 20rem;\n    min-height: 5rem;\n    padding: 2em;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 2rem;\n`\n\nexport const ButtonClose = styled.button`\n    font-size: 1rem;\n    border: 0.1rem solid transparent;    \n    background-color: black;     \n    padding: 0.1rem 0.4rem;\n    border-radius: 0.2rem;\n    cursor: pointer;\n    animation: all 0.3s;\n    color: #FFFFFF;\n\n    p {\n        transform: rotate(45deg);\n    }\n`\n\nexport const DialogBody = styled.div`\n    form > span {\n        font-size: 0.8rem;\n        color: red;\n        font-weight: 100;\n    }\n`\n\nexport const DialogFooter = styled.div`\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const ButtonPrimary = styled.button`\n    background-color: #000000;\n    color: #FFFFFF;\n    padding: 0.5rem 0.8rem;\n    border-radius: 0.4rem;\n    border: 0;\n    cursor: pointer;\n`\n\nexport const ButtonDelete = styled(ButtonPrimary)`\n    background-color: #cd0909;\n    border: 0;\n    color: #FFFFFF;\n`\n\nexport const Input = styled.input`\n    padding: 0.5rem;\n    height: 1.3rem;\n    border-radius: 0.5rem !important;\n    background-color: #000000;\n    border: 0;\n    color: #FFFFFF;\n    width: -webkit-fill-available;\n`","import React from \"react\";\nimport { IDialogEdit } from \"../common/types/dialog\";\nimport {\n    ButtonClose,\n    ButtonDelete,\n    ButtonPrimary,\n    Dialog,\n    DialogBody,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    Input\n} from \"./styled\";\n\nconst DialogEditView: React.FC<IDialogEdit> = (props) => {\n    const { open, register, errors, handleSubmit, onSubmit, onClose, title, deleteThisNote } = props;\n    const isErrors = errors.title?.type === \"required\";\n    return (\n        <>\n            {open && (\n                <Dialog role=\"dialog\">\n                    <DialogContent>\n                        <DialogHeader>\n                            <h3>Edit title</h3>\n                            <ButtonClose onClick={onClose}>\n                                <p>+</p>\n                            </ButtonClose>\n                        </DialogHeader>\n                        <DialogBody>\n                            <form onSubmit={handleSubmit(onSubmit)} id=\"editNote\">\n                                <Input\n                                    {\n                                    ...register(\"title\",\n                                        { required: true })\n                                    }\n                                    defaultValue={title}\n                                    placeholder=\"Tab name\"\n                                    data-testid=\"dialog-edit-title\"\n                                />\n                                {isErrors && <span>Tab name is required</span>}\n                            </form>\n                        </DialogBody>\n                        <DialogFooter>\n                            <ButtonDelete onClick={deleteThisNote}>Delete</ButtonDelete>\n                            <ButtonPrimary form=\"editNote\" data-testid=\"dialog-edit-save\">Save</ButtonPrimary>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    )\n};\n\nexport default DialogEditView;","import { XnoteContext } from \"common/context/XnoteContext\";\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { IDialogTitle, INoteFields } from \"../common/types/dialog\";\nimport DialogEditView from \"./DialogEditView\";\n\nconst DialogEdit: React.FC = () => {\n    const { isOpenDialogEdit, setIsOpenDialogEdit, noteEditDefaultValue, setNoteContent } = useContext(XnoteContext);\n    const { id_note, title } = noteEditDefaultValue;\n    const { register, formState: { errors }, handleSubmit, reset } = useForm<INoteFields>();\n    const [, setStorage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\n\n    const onClose = () => {\n        setIsOpenDialogEdit(prevState => !prevState);\n        reset();\n    };\n\n    const onSubmit = (data: IDialogTitle) => {\n        const storage: INoteFields[] = JSON.parse(localStorage.getItem(\"xnote\")!);\n        const { title } = data;\n        const filterIdNote = (note: INoteFields) => note.id_note === id_note;\n        const [note] = storage.filter(filterIdNote);\n        const indexNote = storage.findIndex(filterIdNote);\n        note.title = title;\n        storage.splice(indexNote, 1, note);\n\n        ReactDOM.unstable_batchedUpdates(() => {\n            setStorage(storage);\n            setNoteContent(storage);\n        })\n        onClose();\n        toast(\"Edited note\");\n    };\n\n    const deleteThisNote = () => {\n        const storage: INoteFields[] = JSON.parse(localStorage.getItem(\"xnote\")!);        \n        const filterIdNote = (note: INoteFields) => note.id_note === id_note;\n        const indexNote = storage.findIndex(filterIdNote);\n        storage.splice(indexNote, 1);\n        \n        ReactDOM.unstable_batchedUpdates(() => {\n            setStorage(storage);\n            setNoteContent(storage);\n        })\n        onClose();\n        toast(\"Delete note\");\n    };\n\n    return (\n        <DialogEditView\n            {...{ register, errors, handleSubmit, onSubmit, onClose, title, deleteThisNote }}\n            open={isOpenDialogEdit}\n        />\n    )\n}\n\nexport default DialogEdit;","import styled from \"styled-components\";\n\nexport const TextAreaStyled = styled.textarea`\n    resize: none;    \n    width: 95%;\n    margin-top: 1rem;\n    padding-right: 1rem;\n    background-color: transparent;\n    height: 75vh;\n    color: white;\n    font-size: 1rem;\n    outline: none;\n    border: 0;\n    font-family: 'Lexend', sans-serif;\n    color: #cfcfcf;\n\n    @media (max-width: 800px) {\n        width: 87%;\n    }\n`","import React from \"react\";\nimport { TextAreaStyled } from \"./styled\";\nimport { ITextArea } from \"./types/types.component\";\n\nconst TextAreaView: React.FC<ITextArea> = ({ dataId, defaultValue, onChange, ...rest }) => {\n    return (\n        <TextAreaStyled\n            className=\"custom-scroll\"\n            data-id={dataId}\n            autoFocus={true}\n            defaultValue={defaultValue}\n            onChange={onChange}\n            placeholder=\"Add content\"\n            {...rest}\n        />\n    )\n}\n\nexport default TextAreaView;","import React from \"react\";\nimport TextAreaView from \"./TextAreaView\";\nimport { ITextArea } from \"./types/types.component\";\n\nconst TextArea: React.FC<ITextArea> = ({ dataId, defaultValue, onChange, ...rest }) => {\n    return <TextAreaView {...{ dataId, defaultValue, onChange, ...rest }}/>\n}\n\nexport default TextArea;","import { Tab, TabList } from \"react-tabs\";\nimport styled from \"styled-components\";\n\nexport const TabListStyled = styled(TabList)`\n    .tab-area {\n        display: flex;\n        list-style: none;    \n        overflow: auto;\n        align-items: center;\n    }    \n`\n\nexport const TabStyled = styled(Tab)`\n    font-size: 0.8rem;\n    background-color: black !important;\n    color: white !important;\n    padding: 0.55rem 1.5rem;\n    border-radius: 0.5rem !important;\n    cursor: pointer;\n    border: 0.1rem solid transparent !important;\n    font-weight: bold;\n    animation: all 0.3s;\n    color: #cfcfcf !important;\n    white-space: nowrap;\n\n    &.react-tabs__tab--selected {\n        border: 0.1rem solid #CD00FE !important;\n    }\n`\n\nexport const ButtonPlus = styled.button`\n    font-size: 1.5rem;\n    border: 0.1rem solid transparent;    \n    background-color: #CD00FE;     \n    padding: 0.2rem 0.8rem;\n    margin-right: 1rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    animation: all 0.3s;\n    color: white;\n\n    :hover {\n        border-color: #CD00FE; \n        background-color: black;\n    }\n    :active {\n        color: white;\n    }\n`","import TextArea from \"components/TextArea\";\nimport React from \"react\";\nimport { TabPanel, Tabs } from \"react-tabs\";\nimport { INoteFields } from \"../common/types/dialog\";\nimport { ButtonPlus, TabListStyled, TabStyled } from \"./styled\";\nimport { ITabs } from \"./types/types.component\";\n\nconst TabsView: React.FC<ITabs> = (props) => {\n    const { \n        storage,\n        openDialogCreate,\n        openDialogEdit,\n        handleContent,\n        onSelect,\n        lastSelectedTab\n    } = props;\n    return (\n        <Tabs onSelect={onSelect} defaultIndex={lastSelectedTab}>\n            <TabListStyled>\n                <div className=\"tab-area custom-scroll\">\n                    <ButtonPlus onClick={openDialogCreate} data-testid=\"button-open-dialog-create\">+</ButtonPlus>\n                    {\n                        !!storage.length ?\n                            (\n                                storage.map((note: INoteFields) => {\n                                    return (\n                                        <TabStyled\n                                            key={note.id_note}\n                                            data-id={note.id_note}\n                                            title=\"Double click select options\"\n                                            onDoubleClick={() => openDialogEdit(note.id_note, note.title)}\n                                        >\n                                            {note.title}\n                                        </TabStyled>\n                                    )\n                                })\n                            ) : \"Add new note\"\n                    }\n                </div>\n            </TabListStyled>\n            {\n                storage &&\n                (\n                    storage.map((note: INoteFields) => {\n                        return (\n                            <TabPanel key={note.id_note}>\n                                <TextArea\n                                    dataId={`${note.id_note}`}\n                                    defaultValue={note.content}\n                                    onChange={handleContent}\n                                />\n                            </TabPanel>\n                        )\n                    })\n                )\n            }\n        </Tabs>\n    )\n}\n\nexport default TabsView;","import { XnoteContext } from \"common/context/XnoteContext\";\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\nimport React, { ChangeEvent, memo, useCallback, useContext } from \"react\";\nimport { INoteFields } from \"../common/types/dialog\";\nimport TabsView from \"./TabsView\";\nimport ReactDOM from \"react-dom\";\n\nconst Tabs: React.FC = () => {\n    const { setIsOpenDialogCreate, setIsOpenDialogEdit, setNoteEditDefaultValue, noteContent, setNoteContent } = useContext(XnoteContext);    \n    const [lastSelectedTab, setLastSelectedTab] = useLocalStorage<number>(\"xnote_tab\", 0);\n    const [, setStorage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\n\n    const openDialogCreate = () => {\n        setIsOpenDialogCreate(prevState => !prevState);\n    }\n\n    const openDialogEdit = useCallback((id_note: string, title: string) => {\n        setNoteEditDefaultValue({ id_note, title });\n        setIsOpenDialogEdit(prevState => !prevState);\n    }, [setIsOpenDialogEdit, setNoteEditDefaultValue])\n\n    const handleContent = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        const storage = JSON.parse(localStorage.getItem(\"xnote\")!);\n        const { value } = e.target;\n        const { id } = e.target.dataset;\n\n        const callBackNote = (note: INoteFields) => note.id_note === id;\n        const [note] = storage.filter(callBackNote);\n        const indexNote = storage.findIndex(callBackNote);\n\n        note.content = value;\n        storage.splice(indexNote, 1, note);\n\n        ReactDOM.unstable_batchedUpdates(() => {\n            setStorage(storage);\n            setTimeout(() => setNoteContent(storage), 500);\n        })        \n    }\n\n    const onSelect = (index: number) => setLastSelectedTab(index);\n\n    return <TabsView storage={noteContent}{... { openDialogCreate, openDialogEdit, handleContent, onSelect, lastSelectedTab }} />\n}\n\nexport default memo(Tabs);","import Container from \"components/Container\";\nimport DialogCreate from \"pages/xnote/DialogCreate\";\nimport React from \"react\";\nimport \"react-tabs/style/react-tabs.css\";\nimport DialogAbout from \"./DialogAbout\";\nimport DialogEdit from \"./DialogEdit\";\nimport Tabs from \"./Tabs\";\n\nconst xnoteView: React.FC = () => {\n    return (\n        <Container>\n            <Tabs />\n            <DialogCreate />\n            <DialogEdit />\n            <DialogAbout />\n        </Container>\n    )\n}\n\nexport default xnoteView;","import React from \"react\";\nimport XnoteView from \"./xnoteView\";\n\nconst Xnote: React.FC = () => {    \n    return <XnoteView />\n}\n\nexport default Xnote;","import Xnote from \"pages/xnote\";\nimport React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nconst Router:React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Xnote} />\n\n                {/* Config githubpages */}\n                <Route path=\"/xnote\" component={Xnote} />\n                <Route path=\"*\">\n                    <Redirect to=\"/xnote\" />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Router;","import { XnoteProvider } from \"common/context/XnoteContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router\";\nimport { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastContainer theme=\"dark\" autoClose={1500}/>\n    <XnoteProvider>\n      <Router />\n    </XnoteProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}